==965== Memcheck, a memory error detector
==965== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==965== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==965== Command: ./cub3D maps/map.cub
==965== Parent PID: 1
==965== 
==965== Invalid read of size 8
==965==    at 0x4023AB4: strncmp (strcmp-sse2.S:162)
==965==    by 0x4004B9E: is_dst (dl-load.c:216)
==965==    by 0x400596E: _dl_dst_count (dl-load.c:253)
==965==    by 0x4005B47: expand_dynamic_string_token (dl-load.c:395)
==965==    by 0x4005CB2: fillin_rpath.isra.0 (dl-load.c:483)
==965==    by 0x4005FA2: decompose_rpath (dl-load.c:654)
==965==    by 0x400815B: _dl_map_object (dl-load.c:2111)
==965==    by 0x4002260: openaux (dl-deps.c:64)
==965==    by 0x4AEDFC9: _dl_catch_exception (dl-error-skeleton.c:208)
==965==    by 0x40025C9: _dl_map_object_deps (dl-deps.c:232)
==965==    by 0x400BA6C: dl_open_worker_begin (dl-open.c:592)
==965==    by 0x4AEDFC9: _dl_catch_exception (dl-error-skeleton.c:208)
==965==  Address 0x51e00d9 is 9 bytes inside a block of size 15 alloc'd
==965==    at 0x48407B4: malloc (vg_replace_malloc.c:381)
==965==    by 0x402389A: malloc (rtld-malloc.h:56)
==965==    by 0x402389A: strdup (strdup.c:42)
==965==    by 0x4005F34: decompose_rpath (dl-load.c:629)
==965==    by 0x400815B: _dl_map_object (dl-load.c:2111)
==965==    by 0x4002260: openaux (dl-deps.c:64)
==965==    by 0x4AEDFC9: _dl_catch_exception (dl-error-skeleton.c:208)
==965==    by 0x40025C9: _dl_map_object_deps (dl-deps.c:232)
==965==    by 0x400BA6C: dl_open_worker_begin (dl-open.c:592)
==965==    by 0x4AEDFC9: _dl_catch_exception (dl-error-skeleton.c:208)
==965==    by 0x400B1C5: dl_open_worker (dl-open.c:782)
==965==    by 0x4AEDFC9: _dl_catch_exception (dl-error-skeleton.c:208)
==965==    by 0x400B5B7: _dl_open (dl-open.c:884)
==965== 
==965== Invalid read of size 8
==965==    at 0x4023AB4: strncmp (strcmp-sse2.S:162)
==965==    by 0x4004B9E: is_dst (dl-load.c:216)
==965==    by 0x4005A0D: _dl_dst_substitute (dl-load.c:295)
==965==    by 0x4005CB2: fillin_rpath.isra.0 (dl-load.c:483)
==965==    by 0x4005FA2: decompose_rpath (dl-load.c:654)
==965==    by 0x400815B: _dl_map_object (dl-load.c:2111)
==965==    by 0x4002260: openaux (dl-deps.c:64)
==965==    by 0x4AEDFC9: _dl_catch_exception (dl-error-skeleton.c:208)
==965==    by 0x40025C9: _dl_map_object_deps (dl-deps.c:232)
==965==    by 0x400BA6C: dl_open_worker_begin (dl-open.c:592)
==965==    by 0x4AEDFC9: _dl_catch_exception (dl-error-skeleton.c:208)
==965==    by 0x400B1C5: dl_open_worker (dl-open.c:782)
==965==  Address 0x51e00d9 is 9 bytes inside a block of size 15 alloc'd
==965==    at 0x48407B4: malloc (vg_replace_malloc.c:381)
==965==    by 0x402389A: malloc (rtld-malloc.h:56)
==965==    by 0x402389A: strdup (strdup.c:42)
==965==    by 0x4005F34: decompose_rpath (dl-load.c:629)
==965==    by 0x400815B: _dl_map_object (dl-load.c:2111)
==965==    by 0x4002260: openaux (dl-deps.c:64)
==965==    by 0x4AEDFC9: _dl_catch_exception (dl-error-skeleton.c:208)
==965==    by 0x40025C9: _dl_map_object_deps (dl-deps.c:232)
==965==    by 0x400BA6C: dl_open_worker_begin (dl-open.c:592)
==965==    by 0x4AEDFC9: _dl_catch_exception (dl-error-skeleton.c:208)
==965==    by 0x400B1C5: dl_open_worker (dl-open.c:782)
==965==    by 0x4AEDFC9: _dl_catch_exception (dl-error-skeleton.c:208)
==965==    by 0x400B5B7: _dl_open (dl-open.c:884)
==965== 
==965== 
==965== HEAP SUMMARY:
==965==     in use at exit: 278,269 bytes in 2,861 blocks
==965==   total heap usage: 72,563 allocs, 69,702 frees, 71,778,376 bytes allocated
==965== 
==965== 56 bytes in 1 blocks are indirectly lost in loss record 2,052 of 2,216
==965==    at 0x48455EF: calloc (vg_replace_malloc.c:1328)
==965==    by 0x6790CB3: ???
==965==    by 0x62CAD5B: ???
==965==    by 0x62B3C50: ???
==965==    by 0x62B3E14: ???
==965==    by 0x6268769: ???
==965==    by 0x626B464: ???
==965==    by 0x6266138: ???
==965==    by 0x62162BF: ???
==965==    by 0x62535BB: ???
==965==    by 0x624FE87: ???
==965==    by 0x61E7C36: ???
==965== 
==965== 112 (56 direct, 56 indirect) bytes in 1 blocks are definitely lost in loss record 2,183 of 2,216
==965==    at 0x48455EF: calloc (vg_replace_malloc.c:1328)
==965==    by 0x6790C8F: ???
==965==    by 0x62CAD5B: ???
==965==    by 0x62B3C50: ???
==965==    by 0x62B3E14: ???
==965==    by 0x6268769: ???
==965==    by 0x626B464: ???
==965==    by 0x6266138: ???
==965==    by 0x62162BF: ???
==965==    by 0x62535BB: ???
==965==    by 0x624FE87: ???
==965==    by 0x61E7C36: ???
==965== 
==965== LEAK SUMMARY:
==965==    definitely lost: 56 bytes in 1 blocks
==965==    indirectly lost: 56 bytes in 1 blocks
==965==      possibly lost: 0 bytes in 0 blocks
==965==    still reachable: 0 bytes in 0 blocks
==965==         suppressed: 278,157 bytes in 2,859 blocks
==965== 
==965== For lists of detected and suppressed errors, rerun with: -s
==965== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 1 from 1)
